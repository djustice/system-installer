#!/bin/bash

job_configure_pacman()
{
    # initialize error handling
    trap error_handler ERR

    msg_job_start "job_configure_pacman"

    trap 'api_fs_umount "${mountpoint}" 2>/dev/null' EXIT
    api_fs_mount "${mountpoint}"

    # remove any db.lck
    chroot ${mountpoint} /bin/rm -f /var/lib/pacman/db.lck

    if [ "$config_pacman" = "yes" ] ; then

        if [ "${ping_check}" != "" ] ; then

            # create new mirrorlist
            msg "network up. creating new mirrorlist"

            # uncomment all mirrors in default mirrorlist
            sed -i 's/#Server/Server/g' ${mountpoint}/etc/pacman.d/mirrorlist

            msg "running rankmirrors on mirrorlist, this can take some time"

            # run rankmirrors and check for the 3 best mirrors
            testmirror=$(rankmirrors -t -n 3 -r core ${mountpoint}/etc/pacman.d/mirrorlist | grep repo | cut -d " " -f 1)

            # start new mirrorlist
            echo >> ${mountpoint}/etc/pacman.d/mirrorlist.new
            echo "# mirrorlist generated by rankmirrors during chakra installation" >> ${mountpoint}/etc/pacman.d/mirrorlist.new
            echo "# the original file was saved to /etc/pacman.d/mirrorlist.pacsave" >> ${mountpoint}/etc/pacman.d/mirrorlist.new
            echo >> ${mountpoint}/etc/pacman.d/mirrorlist.new

            # put the detected mirrors into it
            for p in ${testmirror}; do
                echo "Adding Server: ${p}"
                echo "Server = ${p}" >> ${mountpoint}/etc/pacman.d/mirrorlist.new
            done
            echo >> ${mountpoint}/etc/pacman.d/mirrorlist.new

            # backup old mirrorlist
            mv -v ${mountpoint}/etc/pacman.d/mirrorlist ${mountpoint}/etc/pacman.d/mirrorlist.pacsave

            # install new mirrorlist
            mv -v ${mountpoint}/etc/pacman.d/mirrorlist.new ${mountpoint}/etc/pacman.d/mirrorlist

            # apply mirrorlist also for the installation
            cp -fv ${mountpoint}/etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist

            # update pacman db
            chroot ${mountpoint} /usr/bin/pacman -Syy --noconfirm

        else

            msg "no internet connection available. enable default server"
            # backup old mirrorlist
            cp -fv ${mountpoint}/etc/pacman.d/mirrorlist ${mountpoint}/etc/pacman.d/mirrorlist.pacsave

            # enable default server
            msg "Server = http://mirror.rit.edu/"
            sed -i 's~#Server = http://mirror.rit.edu/~Server = http://mirror.rit.edu/~g' ${mountpoint}/etc/pacman.d/mirrorlist

        fi

    else

        if [ "${ping_check}" != "" ] ; then

            msg "pacman setup disabled. enable default server"
            # backup old mirrorlist
            cp -v ${mountpoint}/etc/pacman.d/mirrorlist ${mountpoint}/etc/pacman.d/mirrorlist.pacsave

            # enable default server
            msg "Server = http://mirror.rit.edu/"
            sed -i 's~#Server = http://mirror.rit.edu/~Server = http://mirror.rit.edu/~g' ${mountpoint}/etc/pacman.d/mirrorlist

            # apply mirrorlist also for the installation
            cp -fv ${mountpoint}/etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist

            # update pacman db
            chroot ${mountpoint} /usr/bin/pacman -Syy --noconfirm

        else

            msg "no internet connection available. enable default server"
            # backup old mirrorlist
            cp -fv ${mountpoint}/etc/pacman.d/mirrorlist ${mountpoint}/etc/pacman.d/mirrorlist.pacsave

            # enable default server
            sed -i 's~#Server = http://mirror.rit.edu/~Server = http://mirror.rit.edu/~g' ${mountpoint}/etc/pacman.d/mirrorlist

        fi

    fi

    msg_job_done "job_configure_pacman"
}
